apiVersion: v1
kind: Pod
metadata:
  name: kube-controller-manager
  namespace: kube-system
  labels:
    k8s-app: kube-controller-manager
    tier: control-plane
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
spec:
  hostNetwork: true
  priorityClassName: system-cluster-critical
  securityContext:
    runAsNonRoot: true
    runAsUser: 65534
  containers:
  - name: kube-controller-manager
    image: ${hyperkube_image}
    command:
    - /hyperkube
    - kube-controller-manager
    - --allocate-node-cidrs=true
    - --cluster-cidr=${pod_cidr}
    - --service-cluster-ip-range=${service_cidr}
    - --cloud-provider=${cloud_provider}
    - --cluster-signing-cert-file=/etc/kubernetes/secrets/ca.crt
    - --cluster-signing-key-file=/etc/kubernetes/secrets/ca.key
    - --configure-cloud-routes=false
    - --kubeconfig=/etc/kubernetes/secrets/kubeconfig
    - --leader-elect=true
    - --root-ca-file=/etc/kubernetes/secrets/ca.crt
    - --service-account-private-key-file=/etc/kubernetes/secrets/service-account.key
    ${feature_gates}
    ${extra_flags_kube_controller_manager}
    livenessProbe:
      httpGet:
        scheme: HTTPS
        host: 127.0.0.1
        path: /healthz
        port: 10257
      initialDelaySeconds: 15
      timeoutSeconds: 15
    volumeMounts:
    - name: secrets
      mountPath: /etc/kubernetes/secrets
      readOnly: true
    - name: ssl-host
      mountPath: /etc/ssl/certs
      readOnly: true
  volumes:
  - name: secrets
    hostPath:
      path: /etc/kubernetes/bootstrap-secrets
  - name: ssl-host
    hostPath:
      path: ${trusted_certs_dir}
